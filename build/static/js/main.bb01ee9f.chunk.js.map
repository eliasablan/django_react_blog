{"version":3,"sources":["components/Article.js","components/Form.js","containers/ArticleListView.js","containers/ArticleDetailView.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["IconText","_ref","type","text","react_default","a","createElement","icon","style","marginRight","Articles","props","list","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","renderItem","item","Item","key","title","actions","Article_IconText","extra","width","alt","src","Meta","avatar","href","concat","id","description","content","FormItem","Form","CustomForm","handleFormSubmit","event","requestType","articleID","target","elements","value","axios","post","then","res","catch","error","err","put","_this2","this","es_form","onSubmit","label","input","name","placeholder","es_button","htmlType","btnText","React","Component","ArticleList","state","articles","get","setState","Article","ArticleDetail","article","handleDelete","_this","match","params","delete","history","push","forceUpdate","card","authSuccess","token","authFail","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","antIcon","fontSize","spin","NormalLoginForm","handleSubmit","e","preventDefault","form","validateFields","values","onAuth","userName","password","errorMessage","message","getFieldDecorator","loading","indicator","className","Login_FormItem","rules","required","prefix","color","NavLink","marginLeft","to","WrappedNormalLoginForm","create","connect","username","expirationDate","Date","getTime","setItem","RegistrationForm","confirmDirty","validateFieldsAndScroll","email","confirm","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","Signup_FormItem","validator","onBlur","WrappedRegistrationForm","password1","password2","BaseRouter","Route","exact","path","component","Login","Signup","Header","Layout","Content","Footer","CustomLayout","layout","menu","theme","mode","defaultSelectedKeys","lineHeight","Link","isAuthenticated","onClick","padding","breadcrumb","margin","background","minHeight","children","textAlign","withRouter","App","onTryAutoSignup","BrowserRouter","routes","getItem","undefined","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","Object","objectSpread","initialState","reducer","arguments","length","action","authStart","authLogout","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb01ee9f.chunk.js","sourcesContent":["import React from 'react';\nimport { List, Avatar, Icon } from 'antd';\n\nconst IconText = ({ type, text }) => (\n    <span>\n        <Icon type={type} style={{ marginRight: 8 }} />\n        {text}\n    </span>\n);\n\nconst Articles = (props) => {\n    return (\n        <List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{\n                onChange: (page) => {\n                    console.log(page);\n                },\n                pageSize: 3,\n            }}\n            dataSource={props.data}\n            renderItem={item => (\n                <List.Item\n                    key={item.title}\n                    actions={[<IconText type=\"star-o\" text=\"156\" />, <IconText type=\"like-o\" text=\"156\" />, <IconText type=\"message\" text=\"2\" />]}\n                    extra={<img width={272} alt=\"logo\" src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\" />}\n                >\n                    <List.Item.Meta\n                        avatar={<Avatar src={item.avatar} />}\n                        title={<a href={`/${item.id}`}>{item.title}</a>}\n                        description={item.description}\n                    />\n                    {item.content}\n                </List.Item>\n            )}\n        />\n    );\n}\n\nexport default Articles;","import React from 'react';\nimport axios from 'axios';\nimport { Form, Input, Button } from 'antd';\n\nconst FormItem = Form.Item;\n\nclass CustomForm extends React.Component {\n\n    handleFormSubmit = (event, requestType, articleID) => {\n        const title = event.target.elements.title.value;\n        const content = event.target.elements.content.value;\n\n        // eslint-disable-next-line\n        switch (requestType) {\n            case 'post':\n                return axios.post(\"http://127.0.0.1:8000/api/\", {\n                    title: title,\n                    content: content\n                })\n                    .then(res => console.log(res))\n                    .catch(error => console.err(error));\n            case 'put':\n                return axios.put(`http://127.0.0.1:8000/api/${articleID}/`, {\n                    title: title,\n                    content: content\n                })\n                    .then(res => console.log(res))\n                    .catch(error => console.err(error));\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={(event) => this.handleFormSubmit(\n                    event,\n                    this.props.requestType,\n                    this.props.articleID,\n                )}>\n                    <FormItem label=\"Title\">\n                        <Input name=\"title\" placeholder=\"Write a title\" />\n                    </FormItem>\n                    <FormItem label=\"Content\">\n                        <Input name=\"content\" placeholder=\"Enter the content\" />\n                    </FormItem>\n                    <FormItem>\n                        <Button type=\"primary\" htmlType=\"submit\">{this.props.btnText}</Button>\n                    </FormItem>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default CustomForm;","import React from 'react';\nimport axios from 'axios';\n\nimport Articles from '../components/Article';\nimport CustomForm from '../components/Form';\n\nclass ArticleList extends React.Component {\n\n    state = {\n        articles: []\n    }\n\n    componentDidMount() {\n        axios.get(\"http://127.0.0.1:8000/api/\")\n            .then(res => {\n                this.setState({\n                    articles: res.data\n                });\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <Articles data={this.state.articles} />\n                <h2>Create an article.</h2>\n                <CustomForm\n                    requestType=\"post\"\n                    articleID={null}\n                    btnText=\"Create\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default ArticleList;","import React from 'react';\nimport axios from 'axios';\n\nimport { Card, Button } from 'antd';\n\nimport CustomForm from '../components/Form';\n\nclass ArticleDetail extends React.Component {\n\n    state = {\n        article: {\n\n        }\n    }\n\n    componentDidMount() {\n        const articleID = this.props.match.params.articleID;\n        axios.get(`http://127.0.0.1:8000/api/${articleID}`)\n            .then(res => {\n                this.setState({\n                    article: res.data\n                });\n            })\n    }\n\n    handleDelete = (event) => {\n        const articleID = this.props.match.params.articleID;\n        axios.delete(`http://127.0.0.1:8000/api/${articleID}`);\n        this.props.history.push('/');\n        this.forceUpdate();\n    }\n\n    render() {\n        return (\n            <div>\n                <Card title={this.state.article.title}>\n                    <p>{this.state.article.content}</p>\n                </Card>\n                <CustomForm\n                    requestType=\"put\"\n                    articleID={this.props.match.params.articleID}\n                    btnText=\"Update\"\n                />\n                <form onSubmit={this.handleDelete}>\n                    <Button type=\"danger\" htmlType=\"submit\">Delete</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ArticleDetail;","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n            username: username,\n            password: password\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(3600));\n            })\n            .catch(err => {\n                dispatch(authFail(err))\n            })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(3600));\n            })\n            .catch(err => {\n                dispatch(authFail(err))\n            })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n","import React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nconst FormItem = Form.Item;\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass NormalLoginForm extends React.Component {\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.onAuth(values.userName, values.password);\n            }\n            this.props.history.push('/');\n        });\n    }\n\n    render() {\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div>\n                {errorMessage}\n                {\n                    this.props.loading ?\n\n                        <Spin indicator={antIcon} />\n\n                        :\n\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                            <FormItem>\n                                {getFieldDecorator('userName', {\n                                    rules: [{ required: true, message: 'Please input your username!' }],\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                                )}\n                            </FormItem>\n\n                            <FormItem>\n                                {getFieldDecorator('password', {\n                                    rules: [{ required: true, message: 'Please input your Password!' }],\n                                })(\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                                )}\n                            </FormItem>\n\n                            <FormItem>\n                                <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\n                                    Login\n                                </Button>\n                                Or\n                                <NavLink style={{ marginRight: '10px', marginLeft: '10px' }} to=\"/signup/\">\n                                    Signup\n                                </NavLink>\n                            </FormItem>\n                        </Form>\n                }\n            </div>\n        );\n    }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","import React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nconst FormItem = Form.Item;\n\nclass RegistrationForm extends React.Component {\n    state = {\n        confirmDirty: false,\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.onAuth(\n                    values.userName,\n                    values.email,\n                    values.password,\n                    values.confirm);\n            };\n        });\n        this.props.history.push('/');\n    }\n\n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    }\n\n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <FormItem>\n                    {getFieldDecorator('userName', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                    )}\n                </FormItem>\n                <FormItem>\n                    {getFieldDecorator('email', {\n                        rules: [{\n                            type: 'email', message: 'The input is not valid E-mail!',\n                        }, {\n                            required: true, message: 'Please input your E-mail!',\n                        }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\n                    )}\n                </FormItem>\n                <FormItem>\n                    {getFieldDecorator('password', {\n                        rules: [{\n                            required: true, message: 'Please input your password!',\n                        }, {\n                            validator: this.validateToNextPassword,\n                        }],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                    )}\n                </FormItem>\n                <FormItem >\n                    {getFieldDecorator('confirm', {\n                        rules: [{\n                            required: true, message: 'Please confirm your password!',\n                        }, {\n                            validator: this.compareToFirstPassword,\n                        }],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" onBlur={this.handleConfirmBlur} />\n                    )}\n                </FormItem>\n\n                <FormItem>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\n                        Signup\n                    </Button>\n                    Or\n                    <NavLink style={{ marginRight: '10px', marginLeft: '10px' }} to=\"/login/\">\n                        Login\n                    </NavLink>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport ArticleList from './containers/ArticleListView';\nimport ArticleDetail from './containers/ArticleDetailView';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\n\nconst BaseRouter = () => (\n    < div >\n        <Route exact path=\"/\" component={ArticleList} />\n        <Route exact path=\"/articles/:articleID/\" component={ArticleDetail} />\n        <Route exact path=\"/login/\" component={Login} />\n        <Route exact path=\"/signup/\" component={Signup} />\n    </div >\n);\n\nexport default BaseRouter;","import React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth'\n\nconst { Header, Content, Footer } = Layout;\n\nclass CustomLayout extends React.Component {\n    render() {\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <div className=\"logo\" />\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"horizontal\"\n                        defaultSelectedKeys={['1']}\n                        style={{ lineHeight: '64px' }}\n                    >\n                        <Menu.Item key=\"1\">\n                            <Link to=\"/\">Posts</Link>\n                        </Menu.Item>\n                        {\n                            this.props.isAuthenticated ?\n\n                                <Menu.Item key=\"2\" onClick={this.props.logout} >\n                                    Logout\n                                </Menu.Item>\n                                :\n                                <Menu.Item key=\"2\">\n                                    <Link to=\"/login\">Log In</Link>\n                                </Menu.Item>\n                        }\n                    </Menu>\n                </Header>\n                <Content style={{ padding: '0 50px' }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                        <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\n                        {/* <Breadcrumb.Item><Link to=\"/\">App</Link></Breadcrumb.Item> */}\n                    </Breadcrumb>\n                    <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\n                        {this.props.children}\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>\n                    Ant Design ©2018 Created by Ant UED\n                </Footer>\n            </Layout>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(actions.logout())\n    }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(CustomLayout));\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\nimport * as actions from './store/actions/auth';\n\nimport CustomLayout from './containers/Layout';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <CustomLayout {...this.props}>\n            <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    error: null,\n    loading: false,\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    })\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    })\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './store/reducers/auth';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}